import { FileType, Transformer } from "../../types";
import { addFunction, addFunctionPrototype } from "../codeTemplates";

// @see https://github.com/iamcsharper/react-configurator/blob/main/src/store/timers/rtc.ts
export enum RtcSourceType {
  External = "internal",
  Internal = "external",
}

export interface RtcTimeDate {
  year: number;
  month: number;
  day: number;
  weekDay: number;

  hours: number;
  minutes: number;
  seconds: number;
}

export interface RtcState {
  rtcEnabled: boolean;
  alarmEnabled: boolean;

  rtcSource: RtcSourceType;
  rtcDateTime: RtcTimeDate;
  rtcRegisters: number[];

  // TODO: alarm date and time?
}

const GENERATED_BY = `/** Generated by rtcTransformer **/`;

export const transformRtc: Transformer = (context, { timers: { rtc } }) => {
  const mainc = context.getOrCreateFile("main.c", FileType.SOURCE);

  if (rtc.rtcEnabled) {
    mainc.includes.push("#include <rtc.h>");
    const { rtcDateTime } = rtc;

    addFunctionPrototype(mainc.privateFunctionPrototypes, "MX_RTC_Init", {
      specifier: "static",
    });

    const rtcArgs = `${rtcDateTime.hours}, ${rtcDateTime.minutes}, ${rtcDateTime.seconds}`;

    mainc.main.push(GENERATED_BY);
    mainc.main.push(`rtc_init(${rtcArgs});`);
    mainc.main.push(`// TODO: add more boilerplate code`);
    // blabla
  } else {
    // bla bla example
    mainc.includes.push("#include <iostream>");
    mainc.defines.push('#define HELLO_WORLD "Hello, world!"');
    mainc.privateFunctionPrototypes.push(
      ...[GENERATED_BY, "int test() {", "printf(HELLO_WORLD);", "}", ""]
    );

    mainc.main.push(...[GENERATED_BY, "test();", ""]);
  }

  return context;
};
